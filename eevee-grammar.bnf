program           -> statement* EOF;

statement         -> exprStmt
                  | printStmt
                  ;

exprStmt          -> expression ";" ;
printStmt         -> "print" expression ";" ;

expression        -> literal
                  | unary
                  | binary
                  | grouping
                  ;

literal           -> NUMBER | STRING | "true" | "false" | "nil" ;
grouping          -> "(" expression ")" ;
postunary         -> (expression ( "++" | "--" )) ;
preunary          -> ( "-" | "!" ) expression ;
ternary           -> expression operator expression operator expression ;
binary            -> expression operator expression ;

operator          -> "==" | "!=" | "<" | "<=" | ">" | ">="
                  | "+" | "+=" | "++" | "-" | "-=" | "--" | "*"
                  | "*=" | "/" | "/=" | "%" | "%=" | "?" | ":"
                  ;

expression        -> ternary

ternary           -> equality ? equality (: ternary)* ;

equality          -> comparison ( ( "!=" | "==" ) comparison )* ;

comparison        -> term ( ( ">" |Â ">=" | "<" | "<=" ) term )* ;

term              -> factor ( ( "-" | "-=" | "+" | "+=" ) factor )* ;

factor            -> postunary ( ( "/" | "/=" | "*" | "*=" | "%" | "%=" ) postunary )* ;

postunary         -> ( "++" | "--") preunary ;

preunary          -> ( "!"  | "-" ) unary
                  | primary
                  ;

primary           -> NUMBER | STRING | "true" | "false" | "nil"
                  | "(" expression ")"
                  ;


